{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"D:/chandan/Sharpener projects/NextJS/todo/01-starting-project/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:/chandan/Sharpener projects/NextJS/todo/01-starting-project/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"D:\\\\chandan\\\\Sharpener projects\\\\NextJS\\\\todo\\\\01-starting-project\\\\pages\\\\todo-list\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport classes from 'todo-list.module.css';\n\nfunction TodoList(_ref) {\n  _s();\n\n  var todos = _ref.todos;\n\n  var _useState = useState(''),\n      newTodo = _useState[0],\n      setNewTodo = _useState[1];\n\n  var _useState2 = useState(todos),\n      todoList = _useState2[0],\n      setTodoList = _useState2[1];\n\n  var titleInputRef = useRef();\n  var imageInputRef = useRef();\n  var addressInputRef = useRef();\n  var descriptionInputRef = useRef();\n\n  function submitHandler(event) {\n    event.preventDefault();\n    var enteredTitle = titleInputRef.current.value;\n    var enteredImage = imageInputRef.current.value;\n    var enteredAddress = addressInputRef.current.value;\n    var enteredDescription = descriptionInputRef.current.value;\n    var meetupData = {\n      title: enteredTitle,\n      image: enteredImage,\n      address: enteredAddress,\n      description: enteredDescription\n    };\n    props.onAddMeetup(meetupData);\n  }\n\n  var addTodo = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function addTodo() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var deleteTodo = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(id) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function deleteTodo(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.form,\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          required: true,\n          id: \"name\",\n          ref: nameInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TodoList, \"ylonINqpS1MVkWk9nGAGMpYKTRI=\");\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["D:/chandan/Sharpener projects/NextJS/todo/01-starting-project/pages/todo-list/index.js"],"names":["useState","classes","TodoList","todos","newTodo","setNewTodo","todoList","setTodoList","titleInputRef","useRef","imageInputRef","addressInputRef","descriptionInputRef","submitHandler","event","preventDefault","enteredTitle","current","value","enteredImage","enteredAddress","enteredDescription","meetupData","title","image","address","description","props","onAddMeetup","addTodo","deleteTodo","id","form","control","nameInputRef","actions"],"mappings":";;;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;AAEA,SAASC,QAAT,OAA6B;AAAA;;AAAA,MAATC,KAAS,QAATA,KAAS;;AAAA,kBACGH,QAAQ,CAAC,EAAD,CADX;AAAA,MACpBI,OADoB;AAAA,MACXC,UADW;;AAAA,mBAEKL,QAAQ,CAACG,KAAD,CAFb;AAAA,MAEpBG,QAFoB;AAAA,MAEVC,WAFU;;AAI3B,MAAMC,aAAa,GAAGC,MAAM,EAA5B;AACA,MAAMC,aAAa,GAAGD,MAAM,EAA5B;AACA,MAAME,eAAe,GAAGF,MAAM,EAA9B;AACA,MAAMG,mBAAmB,GAAGH,MAAM,EAAlC;;AAEA,WAASI,aAAT,CAAuBC,KAAvB,EAA8B;AAC5BA,IAAAA,KAAK,CAACC,cAAN;AAEA,QAAMC,YAAY,GAAGR,aAAa,CAACS,OAAd,CAAsBC,KAA3C;AACA,QAAMC,YAAY,GAAGT,aAAa,CAACO,OAAd,CAAsBC,KAA3C;AACA,QAAME,cAAc,GAAGT,eAAe,CAACM,OAAhB,CAAwBC,KAA/C;AACA,QAAMG,kBAAkB,GAAGT,mBAAmB,CAACK,OAApB,CAA4BC,KAAvD;AAEA,QAAMI,UAAU,GAAG;AACjBC,MAAAA,KAAK,EAAEP,YADU;AAEjBQ,MAAAA,KAAK,EAAEL,YAFU;AAGjBM,MAAAA,OAAO,EAAEL,cAHQ;AAIjBM,MAAAA,WAAW,EAAEL;AAJI,KAAnB;AAOAM,IAAAA,KAAK,CAACC,WAAN,CAAkBN,UAAlB;AACD;;AAED,MAAMO,OAAO;AAAA,yEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAPA,OAAO;AAAA;AAAA;AAAA,KAAb;;AAGA,MAAMC,UAAU;AAAA,yEAAG,kBAAOC,EAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAVD,UAAU;AAAA;AAAA;AAAA,KAAhB;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,2BACE;AAAM,MAAA,SAAS,EAAE7B,OAAO,CAAC+B,IAAzB;AAA+B,MAAA,QAAQ,EAAEnB,aAAzC;AAAA,8BACE;AAAK,QAAA,SAAS,EAAEZ,OAAO,CAACgC,OAAxB;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,QAAQ,MAA3B;AAA4B,UAAA,EAAE,EAAC,MAA/B;AAAsC,UAAA,GAAG,EAAEC;AAA3C;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAK,QAAA,SAAS,EAAEjC,OAAO,CAACkC,OAAxB;AAAA,+BACE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GAhDQjC,Q;;KAAAA,Q;AAkDT,eAAeA,QAAf","sourcesContent":["import { useState } from 'react';\r\nimport classes from 'todo-list.module.css';\r\n\r\nfunction TodoList({ todos }) {\r\n  const [newTodo, setNewTodo] = useState('');\r\n  const [todoList, setTodoList] = useState(todos);\r\n\r\n  const titleInputRef = useRef();\r\n  const imageInputRef = useRef();\r\n  const addressInputRef = useRef();\r\n  const descriptionInputRef = useRef();\r\n\r\n  function submitHandler(event) {\r\n    event.preventDefault();\r\n\r\n    const enteredTitle = titleInputRef.current.value;\r\n    const enteredImage = imageInputRef.current.value;\r\n    const enteredAddress = addressInputRef.current.value;\r\n    const enteredDescription = descriptionInputRef.current.value;\r\n\r\n    const meetupData = {\r\n      title: enteredTitle,\r\n      image: enteredImage,\r\n      address: enteredAddress,\r\n      description: enteredDescription,\r\n    };\r\n\r\n    props.onAddMeetup(meetupData);\r\n  }\r\n\r\n  const addTodo = async () => {\r\n  };\r\n\r\n  const deleteTodo = async (id) => {\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <div className='card'>\r\n      <form className={classes.form} onSubmit={submitHandler}>\r\n        <div className={classes.control}>\r\n          <label htmlFor='name'>Title</label>\r\n          <input type='text' required id='name' ref={nameInputRef} />\r\n        </div>\r\n        <div className={classes.actions}>\r\n          <button type='submit'>Add</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoList;"]},"metadata":{},"sourceType":"module"}