{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\chandan\\\\Sharpener projects\\\\NextJS\\\\todo\\\\01-starting-project\\\\pages\\\\todo-list\\\\index.js\";\nimport { useState, useEffect } from 'react';\nimport { MongoClient } from 'mongodb';\n\nfunction To({\n  todos\n}) {\n  const {\n    0: newTodo,\n    1: setNewTodo\n  } = useState('');\n  const {\n    0: todoList,\n    1: setTodoList\n  } = useState(todos);\n\n  const addTodo = async () => {\n    const client = new MongoClient(process.env.MONGODB_URI);\n    await client.connect();\n    const db = client.db();\n    const todosCollection = db.collection('todos');\n    const result = await todosCollection.insertOne({\n      text: newTodo\n    });\n    setTodoList([...todoList, {\n      _id: result.insertedId,\n      text: newTodo\n    }]);\n    setNewTodo('');\n    await client.close();\n  };\n\n  const deleteTodo = async id => {\n    const client = new MongoClient(process.env.MONGODB_URI);\n    await client.connect();\n    const db = client.db();\n    const todosCollection = db.collection('todos');\n    await todosCollection.deleteOne({\n      _id: id\n    });\n    setTodoList(todoList.filter(todo => todo._id !== id));\n    await client.close();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newTodo,\n      onChange: e => setNewTodo(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addTodo,\n      children: \"Add Todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: todoList.map(todo => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [todo.text, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteTodo(todo._id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)]\n      }, todo._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\nexport default TodoList;","map":{"version":3,"sources":["D:/chandan/Sharpener projects/NextJS/todo/01-starting-project/pages/todo-list/index.js"],"names":["useState","useEffect","MongoClient","To","todos","newTodo","setNewTodo","todoList","setTodoList","addTodo","client","process","env","MONGODB_URI","connect","db","todosCollection","collection","result","insertOne","text","_id","insertedId","close","deleteTodo","id","deleteOne","filter","todo","e","target","value","map","TodoList"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,SAA5B;;AAEA,SAASC,EAAT,CAAY;AAAEC,EAAAA;AAAF,CAAZ,EAAuB;AACrB,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBN,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM;AAAA,OAACO,QAAD;AAAA,OAAWC;AAAX,MAA0BR,QAAQ,CAACI,KAAD,CAAxC;;AAEA,QAAMK,OAAO,GAAG,YAAY;AAC1B,UAAMC,MAAM,GAAG,IAAIR,WAAJ,CAAgBS,OAAO,CAACC,GAAR,CAAYC,WAA5B,CAAf;AACA,UAAMH,MAAM,CAACI,OAAP,EAAN;AACA,UAAMC,EAAE,GAAGL,MAAM,CAACK,EAAP,EAAX;AACA,UAAMC,eAAe,GAAGD,EAAE,CAACE,UAAH,CAAc,OAAd,CAAxB;AACA,UAAMC,MAAM,GAAG,MAAMF,eAAe,CAACG,SAAhB,CAA0B;AAAEC,MAAAA,IAAI,EAAEf;AAAR,KAA1B,CAArB;AACAG,IAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAc;AAAEc,MAAAA,GAAG,EAAEH,MAAM,CAACI,UAAd;AAA0BF,MAAAA,IAAI,EAAEf;AAAhC,KAAd,CAAD,CAAX;AACAC,IAAAA,UAAU,CAAC,EAAD,CAAV;AACA,UAAMI,MAAM,CAACa,KAAP,EAAN;AACD,GATD;;AAWA,QAAMC,UAAU,GAAG,MAAOC,EAAP,IAAc;AAC/B,UAAMf,MAAM,GAAG,IAAIR,WAAJ,CAAgBS,OAAO,CAACC,GAAR,CAAYC,WAA5B,CAAf;AACA,UAAMH,MAAM,CAACI,OAAP,EAAN;AACA,UAAMC,EAAE,GAAGL,MAAM,CAACK,EAAP,EAAX;AACA,UAAMC,eAAe,GAAGD,EAAE,CAACE,UAAH,CAAc,OAAd,CAAxB;AACA,UAAMD,eAAe,CAACU,SAAhB,CAA0B;AAAEL,MAAAA,GAAG,EAAEI;AAAP,KAA1B,CAAN;AACAjB,IAAAA,WAAW,CAACD,QAAQ,CAACoB,MAAT,CAAiBC,IAAD,IAAUA,IAAI,CAACP,GAAL,KAAaI,EAAvC,CAAD,CAAX;AACA,UAAMf,MAAM,CAACa,KAAP,EAAN;AACD,GARD;;AAUA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,KAAK,EAAElB,OAFT;AAGE,MAAA,QAAQ,EAAGwB,CAAD,IAAOvB,UAAU,CAACuB,CAAC,CAACC,MAAF,CAASC,KAAV;AAH7B;AAAA;AAAA;AAAA;AAAA,YAFF,eAOE;AAAQ,MAAA,OAAO,EAAEtB,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF,eAQE;AAAA,gBACGF,QAAQ,CAACyB,GAAT,CAAcJ,IAAD,iBACZ;AAAA,mBACGA,IAAI,CAACR,IADR,eAEE;AAAQ,UAAA,OAAO,EAAE,MAAMI,UAAU,CAACI,IAAI,CAACP,GAAN,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA,SAASO,IAAI,CAACP,GAAd;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;AAED,eAAeY,QAAf","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { MongoClient } from 'mongodb';\r\n\r\nfunction To({ todos }) {\r\n  const [newTodo, setNewTodo] = useState('');\r\n  const [todoList, setTodoList] = useState(todos);\r\n\r\n  const addTodo = async () => {\r\n    const client = new MongoClient(process.env.MONGODB_URI);\r\n    await client.connect();\r\n    const db = client.db();\r\n    const todosCollection = db.collection('todos');\r\n    const result = await todosCollection.insertOne({ text: newTodo });\r\n    setTodoList([...todoList, { _id: result.insertedId, text: newTodo }]);\r\n    setNewTodo('');\r\n    await client.close();\r\n  };\r\n\r\n  const deleteTodo = async (id) => {\r\n    const client = new MongoClient(process.env.MONGODB_URI);\r\n    await client.connect();\r\n    const db = client.db();\r\n    const todosCollection = db.collection('todos');\r\n    await todosCollection.deleteOne({ _id: id });\r\n    setTodoList(todoList.filter((todo) => todo._id !== id));\r\n    await client.close();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Todo List</h1>\r\n      <input\r\n        type=\"text\"\r\n        value={newTodo}\r\n        onChange={(e) => setNewTodo(e.target.value)}\r\n      />\r\n      <button onClick={addTodo}>Add Todo</button>\r\n      <ul>\r\n        {todoList.map((todo) => (\r\n          <li key={todo._id}>\r\n            {todo.text}\r\n            <button onClick={() => deleteTodo(todo._id)}>Delete</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoList;"]},"metadata":{},"sourceType":"module"}