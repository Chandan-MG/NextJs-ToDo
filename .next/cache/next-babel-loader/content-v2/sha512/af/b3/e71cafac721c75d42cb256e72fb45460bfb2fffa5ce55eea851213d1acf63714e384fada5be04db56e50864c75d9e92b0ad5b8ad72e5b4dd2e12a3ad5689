{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\chandan\\\\Sharpener projects\\\\NextJS\\\\todo\\\\01-starting-project\\\\pages\\\\todo-done\\\\index.js\";\nimport { useState } from 'react';\nimport classes from './todo-done.module.css';\nimport { RxTrash } from \"react-icons/rx\";\n\nfunction TodoDone(props) {\n  const {\n    0: listItem,\n    1: setListItem\n  } = useState(DUMMY_ITEM);\n  const {\n    0: isDeleting,\n    1: setIsDeleting\n  } = useState(false);\n\n  const deleteHandler = async () => {\n    setIsDeleting(true);\n\n    try {\n      const response = await fetch(`https://crudcrud.com/api/4307f38ee7274e5fa30e6ef92ac1d952/todo-done/${id}`, {\n        method: 'DELETE'\n      });\n\n      if (response.ok) {\n        // If deletion is successful, you can perform any necessary cleanup or UI updates\n        console.log('Item deleted successfully'); // Example: Refreshing the todo list after deletion\n\n        window.location.reload();\n      } else {\n        console.error('Failed to delete item:', response.status);\n      }\n    } catch (error) {\n      console.error('Error deleting item:', error);\n    } finally {\n      setIsDeleting(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: listItem.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.card,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.name,\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.delete,\n        children: /*#__PURE__*/_jsxDEV(RxTrash, {\n          color: \"red\",\n          style: {\n            width: '30px',\n            height: '30px'\n          },\n          onClick: deleteHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this)]\n    }, item.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n\nexport async function getStaticProps() {\n  try {\n    const response = await fetch(`https://crudcrud.com/api/4307f38ee7274e5fa30e6ef92ac1d952/todo-input`);\n\n    if (response.ok) {\n      const todoList = await response.json();\n      return {\n        props: {\n          todoList\n        }\n      };\n    } else {\n      console.error(\"Failed to fetch data:\", response.status);\n      return {\n        props: {\n          todoList: []\n        }\n      };\n    }\n  } catch (error) {\n    console.error(\"Error fetching:\", error);\n    return {\n      props: {\n        todoList: []\n      }\n    };\n  }\n}\nexport default TodoDone;","map":{"version":3,"sources":["D:/chandan/Sharpener projects/NextJS/todo/01-starting-project/pages/todo-done/index.js"],"names":["useState","classes","RxTrash","TodoDone","props","listItem","setListItem","DUMMY_ITEM","isDeleting","setIsDeleting","deleteHandler","response","fetch","id","method","ok","console","log","window","location","reload","error","status","map","item","card","name","delete","width","height","getStaticProps","todoList","json"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,SAASC,OAAT,QAAwB,gBAAxB;;AAIA,SAASC,QAAT,CAAkBC,KAAlB,EAAwB;AAEpB,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0BN,QAAQ,CAACO,UAAD,CAAxC;AAEA,QAAM;AAAA,OAACC,UAAD;AAAA,OAAaC;AAAb,MAA8BT,QAAQ,CAAC,KAAD,CAA5C;;AAEA,QAAMU,aAAa,GAAG,YAAY;AAC9BD,IAAAA,aAAa,CAAC,IAAD,CAAb;;AACA,QAAI;AACA,YAAME,QAAQ,GAAG,MAAMC,KAAK,CAAE,uEAAsEC,EAAG,EAA3E,EAA8E;AACtGC,QAAAA,MAAM,EAAE;AAD8F,OAA9E,CAA5B;;AAGA,UAAIH,QAAQ,CAACI,EAAb,EAAiB;AACb;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAFa,CAGb;;AACAC,QAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACH,OALD,MAKO;AACHJ,QAAAA,OAAO,CAACK,KAAR,CAAc,wBAAd,EAAwCV,QAAQ,CAACW,MAAjD;AACH;AACJ,KAZD,CAYE,OAAOD,KAAP,EAAc;AACZL,MAAAA,OAAO,CAACK,KAAR,CAAc,sBAAd,EAAsCA,KAAtC;AACH,KAdD,SAcU;AACNZ,MAAAA,aAAa,CAAC,KAAD,CAAb;AACH;AACJ,GAnBD;;AAoBA,sBACI;AAAA,cACKJ,QAAQ,CAACkB,GAAT,CAAaC,IAAI,iBACd;AAAK,MAAA,SAAS,EAAEvB,OAAO,CAACwB,IAAxB;AAAA,8BACI;AAAK,QAAA,SAAS,EAAExB,OAAO,CAACyB,IAAxB;AAAA,+BACI;AAAA,oBAAKF,IAAI,CAACE;AAAV;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAK,QAAA,SAAS,EAAEzB,OAAO,CAAC0B,MAAxB;AAAA,+BACI,QAAC,OAAD;AAAS,UAAA,KAAK,EAAC,KAAf;AAAqB,UAAA,KAAK,EAAE;AAAEC,YAAAA,KAAK,EAAE,MAAT;AAAiBC,YAAAA,MAAM,EAAE;AAAzB,WAA5B;AAA+D,UAAA,OAAO,EAAEnB;AAAxE;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA,OAAmCc,IAAI,CAACX,EAAxC;AAAA;AAAA;AAAA;AAAA,YADH;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH;;AAGD,OAAO,eAAeiB,cAAf,GAAgC;AACnC,MAAI;AACF,UAAMnB,QAAQ,GAAG,MAAMC,KAAK,CAAE,sEAAF,CAA5B;;AACA,QAAID,QAAQ,CAACI,EAAb,EAAiB;AACf,YAAMgB,QAAQ,GAAG,MAAMpB,QAAQ,CAACqB,IAAT,EAAvB;AACA,aAAO;AACL5B,QAAAA,KAAK,EAAE;AACL2B,UAAAA;AADK;AADF,OAAP;AAKD,KAPD,MAOO;AACLf,MAAAA,OAAO,CAACK,KAAR,CAAc,uBAAd,EAAuCV,QAAQ,CAACW,MAAhD;AACA,aAAO;AAAElB,QAAAA,KAAK,EAAE;AAAE2B,UAAAA,QAAQ,EAAE;AAAZ;AAAT,OAAP;AACD;AACF,GAbD,CAaE,OAAOV,KAAP,EAAc;AACdL,IAAAA,OAAO,CAACK,KAAR,CAAc,iBAAd,EAAiCA,KAAjC;AACA,WAAO;AAAEjB,MAAAA,KAAK,EAAE;AAAE2B,QAAAA,QAAQ,EAAE;AAAZ;AAAT,KAAP;AACD;AACJ;AAED,eAAe5B,QAAf","sourcesContent":["import { useState } from 'react';\r\nimport classes from './todo-done.module.css';\r\nimport { RxTrash } from \"react-icons/rx\";\r\n\r\n\r\n\r\nfunction TodoDone(props){\r\n    \r\n    const [listItem, setListItem] = useState(DUMMY_ITEM);\r\n\r\n    const [isDeleting, setIsDeleting] = useState(false);\r\n\r\n    const deleteHandler = async () => {\r\n        setIsDeleting(true);\r\n        try {\r\n            const response = await fetch(`https://crudcrud.com/api/4307f38ee7274e5fa30e6ef92ac1d952/todo-done/${id}`, {\r\n                method: 'DELETE'\r\n            });\r\n            if (response.ok) {\r\n                // If deletion is successful, you can perform any necessary cleanup or UI updates\r\n                console.log('Item deleted successfully');\r\n                // Example: Refreshing the todo list after deletion\r\n                window.location.reload();\r\n            } else {\r\n                console.error('Failed to delete item:', response.status);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error deleting item:', error);\r\n        } finally {\r\n            setIsDeleting(false);\r\n        }\r\n    };\r\n    return(\r\n        <div>\r\n            {listItem.map(item => (\r\n                <div className={classes.card} key={item.id}>\r\n                    <div className={classes.name}>\r\n                        <h3>{item.name}</h3>\r\n                    </div>\r\n                    <div className={classes.delete}>\r\n                        <RxTrash color=\"red\" style={{ width: '30px', height: '30px' }} onClick={deleteHandler} />\r\n                    </div>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport async function getStaticProps() {\r\n    try {\r\n      const response = await fetch(`https://crudcrud.com/api/4307f38ee7274e5fa30e6ef92ac1d952/todo-input`);\r\n      if (response.ok) {\r\n        const todoList = await response.json();\r\n        return { \r\n          props: { \r\n            todoList \r\n          } \r\n        };\r\n      } else {\r\n        console.error(\"Failed to fetch data:\", response.status);\r\n        return { props: { todoList: [] } };\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching:\", error);\r\n      return { props: { todoList: [] } };\r\n    }\r\n}\r\n\r\nexport default TodoDone;"]},"metadata":{},"sourceType":"module"}