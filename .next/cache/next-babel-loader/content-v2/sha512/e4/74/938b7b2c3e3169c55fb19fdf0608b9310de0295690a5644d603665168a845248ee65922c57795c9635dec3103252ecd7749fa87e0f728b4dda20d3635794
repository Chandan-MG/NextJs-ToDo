{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"D:/chandan/Sharpener projects/NextJS/todo/01-starting-project/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:/chandan/Sharpener projects/NextJS/todo/01-starting-project/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"D:\\\\chandan\\\\Sharpener projects\\\\NextJS\\\\todo\\\\01-starting-project\\\\pages\\\\todo-list\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { MongoClient } from 'mongodb';\n\nfunction TodoList(_ref) {\n  _s();\n\n  var _this = this;\n\n  var todos = _ref.todos;\n\n  var _useState = useState(''),\n      newTodo = _useState[0],\n      setNewTodo = _useState[1];\n\n  var _useState2 = useState(todos),\n      todoList = _useState2[0],\n      setTodoList = _useState2[1];\n\n  var addTodo = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function addTodo() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var deleteTodo = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(id) {\n      var client, db, todosCollection;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              client = new MongoClient(process.env.MONGODB_URI);\n              _context2.next = 3;\n              return client.connect();\n\n            case 3:\n              db = client.db();\n              todosCollection = db.collection('todos');\n              _context2.next = 7;\n              return todosCollection.deleteOne({\n                _id: id\n              });\n\n            case 7:\n              setTodoList(todoList.filter(function (todo) {\n                return todo._id !== id;\n              }));\n              _context2.next = 10;\n              return client.close();\n\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function deleteTodo(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newTodo,\n      onChange: function onChange(e) {\n        return setNewTodo(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addTodo,\n      children: \"Add Todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: todoList.map(function (todo) {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [todo.text, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: function onClick() {\n              return deleteTodo(todo._id);\n            },\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, _this)]\n        }, todo._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TodoList, \"k8E5QGgDyUIrDpoU7nNymB/yuAw=\");\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["D:/chandan/Sharpener projects/NextJS/todo/01-starting-project/pages/todo-list/index.js"],"names":["useState","useEffect","MongoClient","TodoList","todos","newTodo","setNewTodo","todoList","setTodoList","addTodo","deleteTodo","id","client","process","env","MONGODB_URI","connect","db","todosCollection","collection","deleteOne","_id","filter","todo","close","e","target","value","map","text"],"mappings":";;;;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,SAA5B;;AAEA,SAASC,QAAT,OAA6B;AAAA;;AAAA;;AAAA,MAATC,KAAS,QAATA,KAAS;;AAAA,kBACGJ,QAAQ,CAAC,EAAD,CADX;AAAA,MACpBK,OADoB;AAAA,MACXC,UADW;;AAAA,mBAEKN,QAAQ,CAACI,KAAD,CAFb;AAAA,MAEpBG,QAFoB;AAAA,MAEVC,WAFU;;AAI3B,MAAMC,OAAO;AAAA,yEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAPA,OAAO;AAAA;AAAA;AAAA,KAAb;;AAGA,MAAMC,UAAU;AAAA,yEAAG,kBAAOC,EAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACXC,cAAAA,MADW,GACF,IAAIV,WAAJ,CAAgBW,OAAO,CAACC,GAAR,CAAYC,WAA5B,CADE;AAAA;AAAA,qBAEXH,MAAM,CAACI,OAAP,EAFW;;AAAA;AAGXC,cAAAA,EAHW,GAGNL,MAAM,CAACK,EAAP,EAHM;AAIXC,cAAAA,eAJW,GAIOD,EAAE,CAACE,UAAH,CAAc,OAAd,CAJP;AAAA;AAAA,qBAKXD,eAAe,CAACE,SAAhB,CAA0B;AAAEC,gBAAAA,GAAG,EAAEV;AAAP,eAA1B,CALW;;AAAA;AAMjBH,cAAAA,WAAW,CAACD,QAAQ,CAACe,MAAT,CAAgB,UAACC,IAAD;AAAA,uBAAUA,IAAI,CAACF,GAAL,KAAaV,EAAvB;AAAA,eAAhB,CAAD,CAAX;AANiB;AAAA,qBAOXC,MAAM,CAACY,KAAP,EAPW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAVd,UAAU;AAAA;AAAA;AAAA,KAAhB;;AAUA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,KAAK,EAAEL,OAFT;AAGE,MAAA,QAAQ,EAAE,kBAACoB,CAAD;AAAA,eAAOnB,UAAU,CAACmB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAjB;AAAA;AAHZ;AAAA;AAAA;AAAA;AAAA,YAFF,eAOE;AAAQ,MAAA,OAAO,EAAElB,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF,eAQE;AAAA,gBACGF,QAAQ,CAACqB,GAAT,CAAa,UAACL,IAAD;AAAA,4BACZ;AAAA,qBACGA,IAAI,CAACM,IADR,eAEE;AAAQ,YAAA,OAAO,EAAE;AAAA,qBAAMnB,UAAU,CAACa,IAAI,CAACF,GAAN,CAAhB;AAAA,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFF;AAAA,WAASE,IAAI,CAACF,GAAd;AAAA;AAAA;AAAA;AAAA,iBADY;AAAA,OAAb;AADH;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;GApCQlB,Q;;KAAAA,Q;AAsCT,eAAeA,QAAf","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { MongoClient } from 'mongodb';\r\n\r\nfunction TodoList({ todos }) {\r\n  const [newTodo, setNewTodo] = useState('');\r\n  const [todoList, setTodoList] = useState(todos);\r\n\r\n  const addTodo = async () => {\r\n  };\r\n\r\n  const deleteTodo = async (id) => {\r\n    const client = new MongoClient(process.env.MONGODB_URI);\r\n    await client.connect();\r\n    const db = client.db();\r\n    const todosCollection = db.collection('todos');\r\n    await todosCollection.deleteOne({ _id: id });\r\n    setTodoList(todoList.filter((todo) => todo._id !== id));\r\n    await client.close();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Todo List</h1>\r\n      <input\r\n        type=\"text\"\r\n        value={newTodo}\r\n        onChange={(e) => setNewTodo(e.target.value)}\r\n      />\r\n      <button onClick={addTodo}>Add Todo</button>\r\n      <ul>\r\n        {todoList.map((todo) => (\r\n          <li key={todo._id}>\r\n            {todo.text}\r\n            <button onClick={() => deleteTodo(todo._id)}>Delete</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoList;"]},"metadata":{},"sourceType":"module"}