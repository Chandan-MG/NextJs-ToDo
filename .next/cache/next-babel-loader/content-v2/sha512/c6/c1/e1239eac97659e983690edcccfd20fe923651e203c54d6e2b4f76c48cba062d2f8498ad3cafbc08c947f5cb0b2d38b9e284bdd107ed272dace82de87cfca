{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"D:/chandan/Sharpener projects/NextJS/todo/01-starting-project/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:/chandan/Sharpener projects/NextJS/todo/01-starting-project/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"D:\\\\chandan\\\\Sharpener projects\\\\NextJS\\\\todo\\\\01-starting-project\\\\pages\\\\todo-list\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport classes from './todo-list.module.css';\nimport { RxTrash } from \"react-icons/rx\";\n\nfunction TodoList(props) {\n  _s();\n\n  var _useState = useState(false),\n      isDeleting = _useState[0],\n      setIsDeleting = _useState[1];\n\n  var deleteHandler = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setIsDeleting(true);\n              _context.prev = 1;\n              _context.next = 4;\n              return fetch(\"https://crudcrud.com/api/4307f38ee7274e5fa30e6ef92ac1d952/todo-input/\".concat(props.id), {\n                method: 'DELETE'\n              });\n\n            case 4:\n              response = _context.sent;\n\n              if (response.ok) {\n                // If deletion is successful, you can perform any necessary cleanup or UI updates\n                console.log('Item deleted successfully'); // Example: Refreshing the todo list after deletion\n\n                window.location.reload();\n              } else {\n                console.error('Failed to delete item:', response.status);\n              }\n\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](1);\n              console.error('Error deleting item:', _context.t0);\n\n            case 11:\n              _context.prev = 11;\n              setIsDeleting(false);\n              return _context.finish(11);\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 8, 11, 14]]);\n    }));\n\n    return function deleteHandler() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var pushToDoneHandler = function pushToDoneHandler() {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.card,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '0.5rem'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.select,\n        onClick: pushToDoneHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.name,\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: props.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes[\"delete\"],\n      children: /*#__PURE__*/_jsxDEV(RxTrash, {\n        color: \"red\",\n        style: {\n          width: '30px',\n          height: '30px'\n        },\n        onClick: deleteHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 13\n  }, this);\n}\n\n_s(TodoList, \"PcvudgQ4pB1b8YUmRhNmcS3boU8=\");\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["D:/chandan/Sharpener projects/NextJS/todo/01-starting-project/pages/todo-list/index.js"],"names":["useState","classes","RxTrash","TodoList","props","isDeleting","setIsDeleting","deleteHandler","fetch","id","method","response","ok","console","log","window","location","reload","error","status","pushToDoneHandler","card","padding","select","name","width","height"],"mappings":";;;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,SAASC,OAAT,QAAwB,gBAAxB;;AAGA,SAASC,QAAT,CAAmBC,KAAnB,EAAyB;AAAA;;AAAA,kBACeJ,QAAQ,CAAC,KAAD,CADvB;AAAA,MACdK,UADc;AAAA,MACFC,aADE;;AAGrB,MAAMC,aAAa;AAAA,wEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAClBD,cAAAA,aAAa,CAAC,IAAD,CAAb;AADkB;AAAA;AAAA,qBAGSE,KAAK,gFAAyEJ,KAAK,CAACK,EAA/E,GAAqF;AAC7GC,gBAAAA,MAAM,EAAE;AADqG,eAArF,CAHd;;AAAA;AAGRC,cAAAA,QAHQ;;AAMd,kBAAIA,QAAQ,CAACC,EAAb,EAAiB;AACb;AACAC,gBAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAFa,CAGb;;AACAC,gBAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACH,eALD,MAKO;AACHJ,gBAAAA,OAAO,CAACK,KAAR,CAAc,wBAAd,EAAwCP,QAAQ,CAACQ,MAAjD;AACH;;AAba;AAAA;;AAAA;AAAA;AAAA;AAedN,cAAAA,OAAO,CAACK,KAAR,CAAc,sBAAd;;AAfc;AAAA;AAiBdZ,cAAAA,aAAa,CAAC,KAAD,CAAb;AAjBc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAbC,aAAa;AAAA;AAAA;AAAA,KAAnB;;AAqBA,MAAMa,iBAAiB,GAAC,SAAlBA,iBAAkB,GAAI,CAE3B,CAFD;;AAGA,sBAEQ;AAAK,IAAA,SAAS,EAAEnB,OAAO,CAACoB,IAAxB;AAAA,4BACI;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,OAAO,EAAE;AAAV,OAAZ;AAAA,6BACI;AAAQ,QAAA,SAAS,EAAErB,OAAO,CAACsB,MAA3B;AAAmC,QAAA,OAAO,EAAEH;AAA5C;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAK,MAAA,SAAS,EAAEnB,OAAO,CAACuB,IAAxB;AAAA,6BACI;AAAA,kBAAKpB,KAAK,CAACoB;AAAX;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAJJ,eAOI;AAAK,MAAA,SAAS,EAAEvB,OAAO,UAAvB;AAAA,6BACI,QAAC,OAAD;AAAS,QAAA,KAAK,EAAC,KAAf;AAAqB,QAAA,KAAK,EAAE;AAACwB,UAAAA,KAAK,EAAE,MAAR;AAAgBC,UAAAA,MAAM,EAAE;AAAxB,SAA5B;AAA6D,QAAA,OAAO,EAAEnB;AAAtE;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAFR;AAeH;;GA1CQJ,Q;;KAAAA,Q;AA4CT,eAAeA,QAAf","sourcesContent":["import { useState } from 'react';\r\nimport classes from './todo-list.module.css';\r\nimport { RxTrash } from \"react-icons/rx\";\r\n  \r\n\r\nfunction TodoList (props){\r\n    const [isDeleting, setIsDeleting] = useState(false);\r\n\r\n    const deleteHandler = async () => {\r\n        setIsDeleting(true);\r\n        try {\r\n            const response = await fetch(`https://crudcrud.com/api/4307f38ee7274e5fa30e6ef92ac1d952/todo-input/${props.id}`, {\r\n                method: 'DELETE'\r\n            });\r\n            if (response.ok) {\r\n                // If deletion is successful, you can perform any necessary cleanup or UI updates\r\n                console.log('Item deleted successfully');\r\n                // Example: Refreshing the todo list after deletion\r\n                window.location.reload();\r\n            } else {\r\n                console.error('Failed to delete item:', response.status);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error deleting item:', error);\r\n        } finally {\r\n            setIsDeleting(false);\r\n        }\r\n    };\r\n\r\n    const pushToDoneHandler=()=>{\r\n\r\n    }\r\n    return(\r\n        \r\n            <div className={classes.card}>\r\n                <div style={{padding: '0.5rem'}} >\r\n                    <button className={classes.select} onClick={pushToDoneHandler}></button>\r\n                </div>\r\n                <div className={classes.name}>\r\n                    <h3>{props.name}</h3>\r\n                </div>\r\n                <div className={classes.delete}>\r\n                    <RxTrash color=\"red\" style={{width: '30px', height: '30px'}} onClick={deleteHandler} />\r\n                </div>\r\n            </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default TodoList;"]},"metadata":{},"sourceType":"module"}